{"version":3,"file":"static/js/700.bec0f47c.chunk.js","mappings":"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","sources":["Api/Api.js","Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '0c8ed985db396a2fc86e7fa938a80edc',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async search => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: search },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\nexport const getMovieReviews = async id => {\n  const data = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const data = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const Button = styled.button``;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n  margin-top: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  text-align: justify;\n  line-height: 1.5;\n`;\n\nexport const PreTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const Item = styled.li``;\n\nexport const List = styled.ul``;\n","import { useEffect, useState, useCallback } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { getMovieById } from '../../Api/Api';\nimport {\n  Container,\n  Button,\n  Img,\n  Title,\n  Wrapper,\n  Text,\n  PreTitle,\n  Item,\n  List,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from || '/';\n\n  const btnBack = useCallback(() => navigate(from), [from, navigate]);\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(response => setMovie(response.data))\n      .catch(err => console.error(err.data));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button type=\"button\" onClick={btnBack}>\n        Go back\n      </Button>\n      <Container>\n      <Img\n        src={`https://image.tmdb.org/t/p/w200/${movie?.poster_path}`}\n        alt=\"poster\"\n      />\n      <Wrapper>\n        <Title>{movie?.title}</Title>\n        <Text>User Score:{(movie?.vote_average * 10).toFixed(0)}%</Text>\n        <PreTitle>Overview</PreTitle>\n        <Text>{movie?.overview}</Text>\n        <PreTitle>Genresv</PreTitle>\n        <Text>\n          {movie?.genres &&\n            movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n        </Text>\n      </Wrapper>\n      </Container>\n      <h3>Additional information</h3>\n      <List>\n        <Item>\n          <Link\n            to={`/movies/${movieId}/cast`}\n            state={{ from: location.state.from }}\n          >\n            Cast\n          </Link>\n        </Item>\n        <Item>\n          <Link\n            to={`/movies/${movieId}/reviews`}\n            state={{ from: location.state.from }}\n          >\n            Reviews\n          </Link>\n        </Item>\n      </List>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","search","query","getMovieById","id","getMovieReviews","getMovieCast","Container","styled","Button","Img","Title","Wrapper","Text","PreTitle","Item","List","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","from","state","btnBack","useCallback","useEffect","then","response","catch","err","console","error","type","onClick","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","name","to"],"sourceRoot":""}