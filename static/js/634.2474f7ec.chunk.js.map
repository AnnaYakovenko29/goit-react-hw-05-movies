{"version":3,"file":"static/js/634.2474f7ec.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAEO,MAAOD,KAFO,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZI,EAAY,mCAAG,WAAMC,GAAN,uFACPZ,EAASM,IAAT,iBAAuBM,IADhB,cACpBL,EADoB,yBAEnBA,GAFmB,2CAAH,sDAIZM,EAAe,mCAAG,WAAMD,GAAN,uFACVZ,EAASM,IAAT,iBAAuBM,EAAvB,aADU,cACvBL,EADuB,yBAEtBA,GAFsB,2CAAH,sDAIfO,EAAY,mCAAG,WAAMF,GAAN,uFACPZ,EAASM,IAAT,iBAAuBM,EAAvB,aADO,cACpBL,EADoB,yBAEnBA,GAFmB,2CAAH,qD,4IC3BZQ,EAAOC,EAAAA,GAAAA,KAAH,4CAKJC,EAAQD,EAAAA,GAAAA,MAAH,0DAKLE,EAASF,EAAAA,GAAAA,OAAH,gEAKNG,EAAYH,EAAAA,GAAAA,GAAH,2C,SCZP,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhB,EAAQe,EAAanB,IAAI,SACzBqB,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVnB,GAA0B,OAAVA,IAGpBF,EAAAA,EAAAA,IAAaE,GACVoB,MAAK,SAAAC,GAAQ,OAAIR,EAAUQ,EAASC,QAAvB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACxB,IAYJ,OACE,iCACE,UAACK,EAAD,CAAMsB,SAZY,SAAAC,GACpBA,EAAEC,iBAC4B,KAA1BD,EAAEE,OAAO/B,OAAOgC,QAGpBf,EAAgB,CAAEhB,MAAO4B,EAAEE,OAAO/B,OAAOgC,QAEzCH,EAAEE,OAAOE,QACV,EAIG,WACE,SAACzB,EAAD,CAAO0B,KAAK,OAAOC,KAAK,YACxB,SAAC1B,EAAD,CAAQyB,KAAK,SAAb,SAAsB,eAExB,wBACGrB,GACCA,EAAOuB,KAAI,gBAAGjC,EAAH,EAAGA,GAAIkC,EAAP,EAAOA,MAAP,OACT,SAAC3B,EAAD,WACE,SAAC,KAAD,CAAS4B,GAAE,kBAAanC,GAAMoC,MAAO,CAAEC,KAAMtB,GAA7C,SACGmB,KAFWlC,EADP,QAUpB,C","sources":["components/Api/Api.js","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '0c8ed985db396a2fc86e7fa938a80edc',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async search => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: search },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n  return data;\n};\nexport const getMovieReviews = async id => {\n  const data = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\nexport const getMovieCast = async id => {\n  const data = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 30px;\n`;\n\nexport const Button = styled.button`\n  font-size: 22px;\n  cursor: pointer:\n`;\n\nexport const MovieItem = styled.li`\nline-height: 1.5;\n`","import { useEffect, useState } from 'react';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../Api/Api';\nimport { Form, Input, Button, MovieItem } from './Movies.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n      return;\n    }\n    searchMovies(query)\n      .then(response => setMovies(response.results))\n      .catch(err => console.error(err));\n  }, [query]);\n\n  const searchHandler = e => {\n    e.preventDefault();\n    if (e.target.search.value === '') {\n      return;\n    }\n    setSearchParams({ query: e.target.search.value });\n\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={searchHandler}>\n        <Input type=\"text\" name=\"search\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <ul>\n        {movies &&\n          movies.map(({ id, title }) => (\n            <MovieItem key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </NavLink>\n            </MovieItem>\n          ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","searchMovies","search","query","getMovieById","id","getMovieReviews","getMovieCast","Form","styled","Input","Button","MovieItem","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","then","response","results","catch","err","console","error","onSubmit","e","preventDefault","target","value","reset","type","name","map","title","to","state","from"],"sourceRoot":""}